<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Green Galaxy ADU - Your Dream ADU in 5 Months | Sacramento & Bay Area</title>
  <meta name="description" content="Factory-built ADUs in 5-6 months. Turnkey service from permits to move-in. Serving Sacramento and Bay Area. Licensed contractor CSLB #1035074.">
  
  <!-- React & Dependencies from CDN -->
  <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
  <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
      background: #111827;
      color: #fff;
    }
    #root {
      min-height: 100vh;
    }
    /* Custom scrollbar */
    ::-webkit-scrollbar {
      width: 10px;
    }
    ::-webkit-scrollbar-track {
      background: #1f2937;
    }
    ::-webkit-scrollbar-thumb {
      background: #4b5563;
      border-radius: 5px;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: #6b7280;
    }
  </style>
</head>
<body>
  <div id="root"></div>

  <script type="text/babel">
    const { useState, useEffect, useRef } = React;

    // Lucide Icons as SVG components
    const Icon = ({ children, size = 24, className = "" }) => (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
        className={className}
      >
        {children}
      </svg>
    );

    const HomeIcon = (props) => <Icon {...props}><path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/><polyline points="9 22 9 12 15 12 15 22"/></Icon>;
    const SettingsIcon = (props) => <Icon {...props}><circle cx="12" cy="12" r="3"/><path d="M12 1v6m0 6v6m5.2-13.2 4.2-4.2m-5.6 5.6-4.2-4.2M23 12h-6m-6 0H5m13.2 5.2 4.2 4.2m-5.6-5.6-4.2 4.2"/></Icon>;
    const InfoIcon = (props) => <Icon {...props}><circle cx="12" cy="12" r="10"/><line x1="12" y1="16" x2="12" y2="12"/><line x1="12" y1="8" x2="12.01" y2="8"/></Icon>;
    const BookIcon = (props) => <Icon {...props}><path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"/><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"/></Icon>;
    const MenuIcon = (props) => <Icon {...props}><line x1="3" y1="12" x2="21" y2="12"/><line x1="3" y1="6" x2="21" y2="6"/><line x1="3" y1="18" x2="21" y2="18"/></Icon>;
    const XIcon = (props) => <Icon {...props}><line x1="18" y1="6" x2="6" y2="18"/><line x1="6" y1="6" x2="18" y2="18"/></Icon>;
    const ChevronRightIcon = (props) => <Icon {...props}><polyline points="9 18 15 12 9 6"/></Icon>;
    const CheckIcon = (props) => <Icon {...props}><polyline points="20 6 9 17 4 12"/></Icon>;
    const StarIcon = (props) => <Icon {...props}><polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/></Icon>;
    const ClockIcon = (props) => <Icon {...props}><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16 14"/></Icon>;
    const DollarIcon = (props) => <Icon {...props}><line x1="12" y1="1" x2="12" y2="23"/><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/></Icon>;
    const MaximizeIcon = (props) => <Icon {...props}><path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/></Icon>;
    const PaletteIcon = (props) => <Icon {...props}><circle cx="13.5" cy="6.5" r=".5"/><circle cx="17.5" cy="10.5" r=".5"/><circle cx="8.5" cy="7.5" r=".5"/><circle cx="6.5" cy="12.5" r=".5"/><path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z"/></Icon>;
    const WrenchIcon = (props) => <Icon {...props}><path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"/></Icon>;
    const EyeIcon = (props) => <Icon {...props}><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/><circle cx="12" cy="12" r="3"/></Icon>;
    const CameraIcon = (props) => <Icon {...props}><path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"/><circle cx="12" cy="13" r="4"/></Icon>;
    const UsersIcon = (props) => <Icon {...props}><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 0 0-3-3.87"/><path d="M16 3.13a4 4 0 0 1 0 7.75"/></Icon>;
    const MailIcon = (props) => <Icon {...props}><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/><polyline points="22,6 12,13 2,6"/></Icon>;
    const PhoneIcon = (props) => <Icon {...props}><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/></Icon>;
    const MapPinIcon = (props) => <Icon {...props}><path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/><circle cx="12" cy="10" r="3"/></Icon>;
    const SendIcon = (props) => <Icon {...props}><line x1="22" y1="2" x2="11" y2="13"/><polygon points="22 2 15 22 11 13 2 9 22 2"/></Icon>;
    const ImageIcon = (props) => <Icon {...props}><rect x="3" y="3" width="18" height="18" rx="2" ry="2"/><circle cx="8.5" cy="8.5" r="1.5"/><polyline points="21 15 16 10 5 21"/></Icon>;
    const CalculatorIcon = (props) => <Icon {...props}><rect x="4" y="2" width="16" height="20" rx="2"/><line x1="8" y1="6" x2="16" y2="6"/><line x1="16" y1="14" x2="16" y2="18"/><path d="M16 10h.01"/><path d="M12 10h.01"/><path d="M8 10h.01"/><path d="M12 14h.01"/><path d="M8 14h.01"/><path d="M12 18h.01"/><path d="M8 18h.01"/></Icon>;
    const LightbulbIcon = (props) => <Icon {...props}><line x1="9" y1="18" x2="15" y2="18"/><line x1="10" y1="22" x2="14" y2="22"/><path d="M15.09 14c.18-.98.65-1.74 1.41-2.5A4.65 4.65 0 0 0 18 8 6 6 0 0 0 6 8c0 1 .23 2.23 1.5 3.5A4.61 4.61 0 0 1 8.91 14"/></Icon>;
    const ZapIcon = (props) => <Icon {...props}><polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"/></Icon>;

    const ADUWebsite = () => {
      const [currentPage, setCurrentPage] = useState('home');
      const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
      const [selectedBlogPost, setSelectedBlogPost] = useState(null);
      const [selectedConfig, setSelectedConfig] = useState({
        model: 'studio',
        exteriorColor: 'charcoal',
        finish: 'premium',
        solarPanels: true,
        patio: false,
        flooring: 'luxury-vinyl',
        fixtures: 'premium',
        appliances: 'stainless',
        smartHome: false,
        hvac: 'heat-pump'
      });

      const canvasRef = useRef(null);
      const sceneRef = useRef(null);
      const rendererRef = useRef(null);
      const aduRef = useRef(null);

      useEffect(() => {
        if (!canvasRef.current || typeof THREE === 'undefined') return;

        const scene = new THREE.Scene();
        scene.background = new THREE.Color(0x1a1a2e);
        sceneRef.current = scene;

        const camera = new THREE.PerspectiveCamera(75, canvasRef.current.clientWidth / canvasRef.current.clientHeight, 0.1, 1000);
        camera.position.set(5, 4, 5);
        camera.lookAt(0, 0, 0);

        const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current, antialias: true });
        renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);
        rendererRef.current = renderer;

        const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);
        scene.add(ambientLight);

        const directionalLight1 = new THREE.DirectionalLight(0xffffff, 0.8);
        directionalLight1.position.set(5, 10, 5);
        scene.add(directionalLight1);

        const directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.4);
        directionalLight2.position.set(-5, 5, -5);
        scene.add(directionalLight2);

        createADUModel(scene);

        const animate = () => {
          requestAnimationFrame(animate);
          if (aduRef.current) {
            aduRef.current.rotation.y += 0.003;
          }
          renderer.render(scene, camera);
        };
        animate();

        const handleResize = () => {
          if (!canvasRef.current) return;
          camera.aspect = canvasRef.current.clientWidth / canvasRef.current.clientHeight;
          camera.updateProjectionMatrix();
          renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);
        };
        window.addEventListener('resize', handleResize);

        return () => {
          window.removeEventListener('resize', handleResize);
          if (renderer) renderer.dispose();
        };
      }, []);

      useEffect(() => {
        if (sceneRef.current && aduRef.current) {
          sceneRef.current.remove(aduRef.current);
          createADUModel(sceneRef.current);
        }
      }, [selectedConfig]);

      const createADUModel = (scene) => {
        if (typeof THREE === 'undefined') return;
        
        const aduGroup = new THREE.Group();

        const colorMap = {
          charcoal: 0x3a3a3a,
          sage: 0x8a9a7a,
          modern: 0x4a5a6a,
          white: 0xe8e8e8
        };

        const wallColor = colorMap[selectedConfig.exteriorColor] || 0x4a5a6a;

        const wallGeometry = new THREE.BoxGeometry(4, 2.5, 3);
        const wallMaterial = new THREE.MeshStandardMaterial({ color: wallColor });
        const walls = new THREE.Mesh(wallGeometry, wallMaterial);
        walls.position.y = 1.25;
        aduGroup.add(walls);

        const roofGeometry = new THREE.BoxGeometry(4.4, 0.3, 3.4);
        const roofMaterial = new THREE.MeshStandardMaterial({ color: 0x2a2a2a });
        const roof = new THREE.Mesh(roofGeometry, roofMaterial);
        roof.position.y = 2.65;
        aduGroup.add(roof);

        const windowGeometry = new THREE.BoxGeometry(0.05, 0.8, 0.6);
        const windowMaterial = new THREE.MeshStandardMaterial({ 
          color: 0x87ceeb, 
          transparent: true, 
          opacity: 0.6,
          emissive: 0x87ceeb,
          emissiveIntensity: 0.2
        });

        const window1 = new THREE.Mesh(windowGeometry, windowMaterial);
        window1.position.set(-1, 1.5, 1.51);
        aduGroup.add(window1);

        const window2 = new THREE.Mesh(windowGeometry, windowMaterial);
        window2.position.set(1, 1.5, 1.51);
        aduGroup.add(window2);

        const doorGeometry = new THREE.BoxGeometry(0.05, 1.5, 0.8);
        const doorMaterial = new THREE.MeshStandardMaterial({ color: 0x4a2c1a });
        const door = new THREE.Mesh(doorGeometry, doorMaterial);
        door.position.set(0, 0.75, 1.51);
        aduGroup.add(door);

        if (selectedConfig.solarPanels) {
          const panelGeometry = new THREE.BoxGeometry(1.5, 0.05, 1.2);
          const panelMaterial = new THREE.MeshStandardMaterial({ 
            color: 0x1a1a3a,
            metalness: 0.8,
            roughness: 0.2
          });
          
          const panel1 = new THREE.Mesh(panelGeometry, panelMaterial);
          panel1.position.set(-0.8, 2.85, 0);
          panel1.rotation.x = -0.2;
          aduGroup.add(panel1);

          const panel2 = new THREE.Mesh(panelGeometry, panelMaterial);
          panel2.position.set(0.8, 2.85, 0);
          panel2.rotation.x = -0.2;
          aduGroup.add(panel2);
        }

        if (selectedConfig.patio) {
          const patioGeometry = new THREE.BoxGeometry(4, 0.1, 1.5);
          const patioMaterial = new THREE.MeshStandardMaterial({ color: 0x8b7355 });
          const patio = new THREE.Mesh(patioGeometry, patioMaterial);
          patio.position.set(0, 0.05, 2.5);
          aduGroup.add(patio);
        }

        const foundationGeometry = new THREE.BoxGeometry(4.2, 0.3, 3.2);
        const foundationMaterial = new THREE.MeshStandardMaterial({ color: 0x5a5a5a });
        const foundation = new THREE.Mesh(foundationGeometry, foundationMaterial);
        foundation.position.y = 0.15;
        aduGroup.add(foundation);

        scene.add(aduGroup);
        aduRef.current = aduGroup;
      };

      const calculatePrice = () => {
        let basePrice = 0;
        if (selectedConfig.model === 'studio') basePrice = 149000;
        if (selectedConfig.model === 'suite') basePrice = 189000;
        if (selectedConfig.model === 'villa') basePrice = 249000;

        if (selectedConfig.finish === 'premium') basePrice += 15000;
        if (selectedConfig.finish === 'luxury') basePrice += 35000;
        if (selectedConfig.solarPanels) basePrice += 18000;
        if (selectedConfig.patio) basePrice += 8000;
        if (selectedConfig.fixtures === 'premium') basePrice += 5000;
        if (selectedConfig.fixtures === 'luxury') basePrice += 12000;
        if (selectedConfig.flooring === 'hardwood') basePrice += 8000;
        if (selectedConfig.flooring === 'luxury-vinyl') basePrice += 3000;
        if (selectedConfig.appliances === 'stainless') basePrice += 4000;
        if (selectedConfig.appliances === 'high-end') basePrice += 9000;
        if (selectedConfig.smartHome) basePrice += 6000;
        if (selectedConfig.hvac === 'heat-pump') basePrice += 3000;

        return basePrice;
      };

      const models = [
        { id: 'studio', name: 'Galaxy Studio', size: 400, beds: 0, baths: 1, desc: 'Perfect for home office or rental income', rent: 1800 },
        { id: 'suite', name: 'Galaxy Suite', size: 600, beds: 1, baths: 1, desc: 'Ideal for guests or rental unit', rent: 2200 },
        { id: 'villa', name: 'Galaxy Villa', size: 800, beds: 2, baths: 1.5, desc: 'Spacious living for family or premium rental', rent: 2800 }
      ];

      const Navigation = () => (
        <nav className="fixed top-0 w-full bg-gray-900/95 backdrop-blur-sm z-50 border-b border-gray-800">
          <div className="max-w-7xl mx-auto px-4">
            <div className="flex items-center justify-between h-16">
              <div className="flex items-center space-x-2 cursor-pointer" onClick={() => setCurrentPage('home')}>
                <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                  <span className="text-white font-bold text-xl">G</span>
                </div>
                <span className="text-white font-bold text-xl">Green Galaxy</span>
              </div>

              <div className="hidden md:flex space-x-8">
                <button onClick={() => setCurrentPage('home')} className={`${currentPage === 'home' ? 'text-blue-400' : 'text-gray-300'} hover:text-white transition flex items-center space-x-2`}>
                  <HomeIcon size={18} />
                  <span>Home</span>
                </button>
                <button onClick={() => setCurrentPage('customize')} className={`${currentPage === 'customize' ? 'text-blue-400' : 'text-gray-300'} hover:text-white transition flex items-center space-x-2`}>
                  <SettingsIcon size={18} />
                  <span>Design</span>
                </button>
                <button onClick={() => setCurrentPage('contact')} className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-2 rounded-lg font-semibold hover:shadow-lg hover:shadow-blue-500/50 transition">
                  Get Started
                </button>
              </div>

              <button onClick={() => setMobileMenuOpen(!mobileMenuOpen)} className="md:hidden text-white">
                {mobileMenuOpen ? <XIcon size={24} /> : <MenuIcon size={24} />}
              </button>
            </div>

            {mobileMenuOpen && (
              <div className="md:hidden pb-4 space-y-2">
                <button onClick={() => { setCurrentPage('home'); setMobileMenuOpen(false); }} className="block w-full text-left px-4 py-2 text-gray-300 hover:bg-gray-800 rounded">Home</button>
                <button onClick={() => { setCurrentPage('customize'); setMobileMenuOpen(false); }} className="block w-full text-left px-4 py-2 text-gray-300 hover:bg-gray-800 rounded">Design</button>
                <button onClick={() => { setCurrentPage('contact'); setMobileMenuOpen(false); }} className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white px-4 py-2 rounded-lg font-semibold">Get Started</button>
              </div>
            )}
          </div>
        </nav>
      );

      const HomePage = () => (
        <div className="pt-16">
          <section className="bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900 min-h-screen flex items-center">
            <div className="max-w-7xl mx-auto px-4 py-20 grid md:grid-cols-2 gap-12 items-center">
              <div>
                <h1 className="text-5xl md:text-6xl font-bold text-white mb-6">
                  Your Dream ADU in <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400">5 Months</span>
                </h1>
                <p className="text-xl text-gray-300 mb-8">
                  Factory-built quality. Turnkey service. Built to your specifications. From permits to move-in, we handle everything.
                </p>
                <div className="flex flex-wrap gap-4">
                  <button onClick={() => setCurrentPage('customize')} className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:shadow-xl hover:shadow-blue-500/50 transition flex items-center space-x-2">
                    <span>Start Designing</span>
                    <ChevronRightIcon size={20} />
                  </button>
                  <button onClick={() => setCurrentPage('contact')} className="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white hover:text-gray-900 transition">
                    Get Free Quote
                  </button>
                </div>

                <div className="mt-12 grid grid-cols-3 gap-6">
                  <div>
                    <div className="text-3xl font-bold text-blue-400">5-6</div>
                    <div className="text-gray-400">Months Average</div>
                  </div>
                  <div>
                    <div className="text-3xl font-bold text-purple-400">$2,200</div>
                    <div className="text-gray-400">Avg Monthly Rent</div>
                  </div>
                  <div>
                    <div className="text-3xl font-bold text-pink-400">100+</div>
                    <div className="text-gray-400">Happy Clients</div>
                  </div>
                </div>
              </div>

              <div className="relative">
                <canvas ref={canvasRef} className="w-full h-[500px] rounded-2xl shadow-2xl" />
                <div className="absolute bottom-4 right-4 bg-gray-900/80 backdrop-blur-sm px-4 py-2 rounded-lg border border-gray-700">
                  <div className="text-white font-semibold">{models.find(m => m.id === selectedConfig.model)?.name}</div>
                  <div className="text-blue-400 text-2xl font-bold">${calculatePrice().toLocaleString()}</div>
                </div>
              </div>
            </div>
          </section>

          <section className="py-20 bg-gray-900">
            <div className="max-w-7xl mx-auto px-4">
              <div className="grid md:grid-cols-4 gap-8">
                <div className="text-center">
                  <ClockIcon className="w-12 h-12 text-blue-400 mx-auto mb-4" />
                  <h3 className="text-2xl font-bold text-white mb-2">Fast Timeline</h3>
                  <p className="text-gray-400">5-6 months from permit to move-in</p>
                </div>
                <div className="text-center">
                  <CheckIcon className="w-12 h-12 text-green-400 mx-auto mb-4" />
                  <h3 className="text-2xl font-bold text-white mb-2">Turnkey Service</h3>
                  <p className="text-gray-400">We handle permits, site prep, installation</p>
                </div>
                <div className="text-center">
                  <DollarIcon className="w-12 h-12 text-purple-400 mx-auto mb-4" />
                  <h3 className="text-2xl font-bold text-white mb-2">ROI Focused</h3>
                  <p className="text-gray-400">ADUs typically pay for themselves in 7-10 years</p>
                </div>
                <div className="text-center">
                  <StarIcon className="w-12 h-12 text-yellow-400 mx-auto mb-4" />
                  <h3 className="text-2xl font-bold text-white mb-2">Premium Quality</h3>
                  <p className="text-gray-400">Factory-built to exceed California standards</p>
                </div>
              </div>
            </div>
          </section>

          <section className="py-20 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900">
            <div className="max-w-7xl mx-auto px-4">
              <h2 className="text-4xl font-bold text-white text-center mb-4">Choose Your Model</h2>
              <p className="text-xl text-gray-400 text-center mb-12">Three signature designs, infinite possibilities</p>

              <div className="grid md:grid-cols-3 gap-8">
                {models.map(model => (
                  <div key={model.id} className="bg-gray-800/50 backdrop-blur-sm rounded-2xl overflow-hidden border border-gray-700 hover:border-blue-500 transition group">
                    <div className="h-48 bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white text-6xl font-bold">
                      {model.size}
                      <span className="text-2xl">ft²</span>
                    </div>
                    <div className="p-6">
                      <h3 className="text-2xl font-bold text-white mb-2">{model.name}</h3>
                      <div className="flex items-center space-x-4 text-gray-400 mb-4">
                        <span>{model.beds} Bed</span>
                        <span>•</span>
                        <span>{model.baths} Bath</span>
                      </div>
                      <p className="text-gray-400 mb-4">{model.desc}</p>
                      <div className="text-green-400 font-semibold mb-4">Avg Rent: ${model.rent}/mo</div>
                      <button onClick={() => { setSelectedConfig({...selectedConfig, model: model.id}); setCurrentPage('customize'); }} className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 rounded-lg font-semibold group-hover:shadow-lg group-hover:shadow-blue-500/50 transition">
                        Customize This Model
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </section>
        </div>
      );

      const CustomizePage = () => (
        <div className="pt-16 bg-gray-900 min-h-screen">
          <div className="max-w-7xl mx-auto px-4 py-12">
            <h1 className="text-4xl font-bold text-white mb-8">Design Your Perfect ADU</h1>

            <div className="grid lg:grid-cols-3 gap-8">
              <div className="lg:col-span-2 space-y-6">
                <div className="bg-gray-800 rounded-2xl p-6">
                  <canvas ref={canvasRef} className="w-full h-[500px] rounded-xl" />
                </div>

                <div className="bg-gradient-to-br from-blue-900 to-purple-900 rounded-2xl p-6">
                  <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                    <div>
                      <div className="text-gray-300 mb-2">Your Custom ADU</div>
                      <div className="text-4xl font-bold text-white">${calculatePrice().toLocaleString()}</div>
                      <div className="text-gray-400 mt-2">Est. monthly rent: ${models.find(m => m.id === selectedConfig.model)?.rent || 0}/mo</div>
                    </div>
                    <button onClick={() => setCurrentPage('contact')} className="bg-white text-gray-900 px-6 py-3 rounded-lg font-bold hover:shadow-xl transition">
                      Get Quote
                    </button>
                  </div>
                </div>
              </div>

              <div className="space-y-6">
                <div className="bg-gray-800 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <HomeIcon className="mr-2" size={20} />
                    Select Model
                  </h3>
                  <div className="space-y-3">
                    {models.map(model => (
                      <button
                        key={model.id}
                        onClick={() => setSelectedConfig({...selectedConfig, model: model.id})}
                        className={`w-full p-4 rounded-lg border-2 transition ${selectedConfig.model === model.id ? 'border-blue-500 bg-blue-900/30' : 'border-gray-700 hover:border-gray-600'}`}
                      >
                        <div className="flex items-center justify-between">
                          <div className="text-left">
                            <div className="text-white font-semibold">{model.name}</div>
                            <div className="text-gray-400 text-sm">{model.size} sq ft</div>
                          </div>
                          {selectedConfig.model === model.id && <CheckIcon className="text-blue-400" size={20} />}
                        </div>
                      </button>
                    ))}
                  </div>
                </div>

                <div className="bg-gray-800 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <PaletteIcon className="mr-2" size={20} />
                    Exterior Color
                  </h3>
                  <div className="grid grid-cols-2 gap-3">
                    {['charcoal', 'sage', 'modern', 'white'].map(color => (
                      <button
                        key={color}
                        onClick={() => setSelectedConfig({...selectedConfig, exteriorColor: color})}
                        className={`p-4 rounded-lg border-2 capitalize transition ${selectedConfig.exteriorColor === color ? 'border-blue-500 bg-blue-900/30' : 'border-gray-700 hover:border-gray-600'}`}
                      >
                        <div className="text-white">{color}</div>
                      </button>
                    ))}
                  </div>
                </div>

                <div className="bg-gray-800 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <ZapIcon className="mr-2" size={20} />
                    Premium Add-ons
                  </h3>
                  <div className="space-y-3">
                    <button
                      onClick={() => setSelectedConfig({...selectedConfig, solarPanels: !selectedConfig.solarPanels})}
                      className={`w-full p-4 rounded-lg border-2 transition ${selectedConfig.solarPanels ? 'border-green-500 bg-green-900/30' : 'border-gray-700 hover:border-gray-600'}`}
                    >
                      <div className="flex items-center justify-between">
                        <div className="text-left flex items-center space-x-3">
                          <ZapIcon className="text-yellow-400" size={20} />
                          <div>
                            <div className="text-white font-semibold">Solar Panels</div>
                            <div className="text-gray-400 text-sm">3kW system</div>
                          </div>
                        </div>
                        <div className="text-green-400 font-semibold">+$18,000</div>
                      </div>
                    </button>

                    <button
                      onClick={() => setSelectedConfig({...selectedConfig, patio: !selectedConfig.patio})}
                      className={`w-full p-4 rounded-lg border-2 transition ${selectedConfig.patio ? 'border-green-500 bg-green-900/30' : 'border-gray-700 hover:border-gray-600'}`}
                    >
                      <div className="flex items-center justify-between">
                        <div className="text-left flex items-center space-x-3">
                          <MaximizeIcon className="text-blue-400" size={20} />
                          <div>
                            <div className="text-white font-semibold">Covered Patio</div>
                            <div className="text-gray-400 text-sm">150 sq ft deck</div>
                          </div>
                        </div>
                        <div className="text-green-400 font-semibold">+$8,000</div>
                      </div>
                    </button>

                    <button
                      onClick={() => setSelectedConfig({...selectedConfig, smartHome: !selectedConfig.smartHome})}
                      className={`w-full p-4 rounded-lg border-2 transition ${selectedConfig.smartHome ? 'border-green-500 bg-green-900/30' : 'border-gray-700 hover:border-gray-600'}`}
                    >
                      <div className="flex items-center justify-between">
                        <div className="text-left flex items-center space-x-3">
                          <LightbulbIcon className="text-purple-400" size={20} />
                          <div>
                            <div className="text-white font-semibold">Smart Home Package</div>
                            <div className="text-gray-400 text-sm">Thermostat, locks, lights</div>
                          </div>
                        </div>
                        <div className="text-green-400 font-semibold">+$6,000</div>
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      );

      const ContactPage = () => (
        <div className="pt-16 bg-gray-900 min-h-screen">
          <div className="max-w-5xl mx-auto px-4 py-12">
            <div className="text-center mb-12">
              <h1 className="text-4xl font-bold text-white mb-4">Let's Build Your ADU</h1>
              <p className="text-xl text-gray-400">Free consultation • No obligation • Expert guidance</p>
            </div>

            <div className="grid md:grid-cols-2 gap-8">
              <div className="bg-gray-800 rounded-2xl p-8">
                <h2 className="text-2xl font-bold text-white mb-6">Get Your Free Quote</h2>
                <div className="space-y-4">
                  <input type="text" placeholder="Full Name" className="w-full bg-gray-900 border border-gray-700 rounded-lg px-4 py-3 text-white focus:border-blue-500 focus:outline-none" />
                  <input type="email" placeholder="Email" className="w-full bg-gray-900 border border-gray-700 rounded-lg px-4 py-3 text-white focus:border-blue-500 focus:outline-none" />
                  <input type="tel" placeholder="Phone" className="w-full bg-gray-900 border border-gray-700 rounded-lg px-4 py-3 text-white focus:border-blue-500 focus:outline-none" />
                  <textarea rows="4" placeholder="Tell us about your project..." className="w-full bg-gray-900 border border-gray-700 rounded-lg px-4 py-3 text-white focus:border-blue-500 focus:outline-none resize-none"></textarea>
                  <button className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-4 rounded-lg font-bold text-lg hover:shadow-xl transition flex items-center justify-center space-x-2">
                    <SendIcon size={20} />
                    <span>Send My Information</span>
                  </button>
                </div>
              </div>

              <div className="space-y-6">
                <div className="bg-gradient-to-br from-blue-900 to-purple-900 rounded-2xl p-8 border border-blue-500/30">
                  <h3 className="text-2xl font-bold text-white mb-6">What Happens Next?</h3>
                  <div className="space-y-4">
                    <div className="flex items-start space-x-4">
                      <div className="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold">1</div>
                      <div>
                        <div className="text-white font-semibold mb-1">Free Consultation Call</div>
                        <div className="text-gray-300 text-sm">Discuss your goals, property, and timeline (30 min)</div>
                      </div>
                    </div>
                    <div className="flex items-start space-x-4">
                      <div className="flex-shrink-0 w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center text-white font-bold">2</div>
                      <div>
                        <div className="text-white font-semibold mb-1">Site Assessment</div>
                        <div className="text-gray-300 text-sm">On-site visit to evaluate lot and feasibility</div>
                      </div>
                    </div>
                    <div className="flex items-start space-x-4">
                      <div className="flex-shrink-0 w-8 h-8 bg-pink-500 rounded-full flex items-center justify-center text-white font-bold">3</div>
                      <div>
                        <div className="text-white font-semibold mb-1">Custom Proposal</div>
                        <div className="text-gray-300 text-sm">Detailed quote with design options and timeline</div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-gray-800 rounded-xl p-6">
                  <h3 className="text-xl font-bold text-white mb-4">Contact Information</h3>
                  <div className="space-y-4">
                    <div className="flex items-center space-x-3">
                      <PhoneIcon className="text-blue-400" size={20} />
                      <div>
                        <div className="text-gray-400 text-sm">Phone</div>
                        <div className="text-white font-semibold">(555) 123-4567</div>
                      </div>
                    </div>
                    <div className="flex items-center space-x-3">
                      <MailIcon className="text-purple-400" size={20} />
                      <div>
                        <div className="text-gray-400 text-sm">Email</div>
                        <div className="text-white font-semibold">info@greengalaxy.com</div>
                      </div>
                    </div>
                    <div className="flex items-center space-x-3">
                      <MapPinIcon className="text-pink-400" size={20} />
                      <div>
                        <div className="text-gray-400 text-sm">Service Areas</div>
                        <div className="text-white font-semibold">Sacramento & Bay Area</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      );

      return (
        <div className="min-h-screen bg-gray-900">
          <Navigation />
          {currentPage === 'home' && <HomePage />}
          {currentPage === 'customize' && <CustomizePage />}
          {currentPage === 'contact' && <ContactPage />}

          <footer className="bg-gray-950 border-t border-gray-800 py-12">
            <div className="max-w-7xl mx-auto px-4">
              <div className="text-center text-gray-400">
                <p>© 2025 Green Galaxy ADU. Licensed Contractor CSLB #1035074. All rights reserved.</p>
                <p className="mt-2">Sacramento, CA | Bay Area, CA | (555) 123-4567 | info@greengalaxy.com</p>
              </div>
            </div>
          </footer>
        </div>
      );
    };

    ReactDOM.render(<ADUWebsite />, document.getElementById('root'));
  </script>
</body>
</html>
